{
  "contractName": "IKittyMarketPlace",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "TxType",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "MarketTransaction",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_kittyContractAddress",
          "type": "address"
        }
      ],
      "name": "setKittyContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getOffer",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllTokenOnSale",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "listOfOffers",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "setOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "removeOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "buyKitty",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"TxType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"MarketTransaction\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"buyKitty\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTokenOnSale\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"listOfOffers\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getOffer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"removeOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_kittyContractAddress\",\"type\":\"address\"}],\"name\":\"setKittyContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"setOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyKitty(uint256)\":{\"notice\":\"Executes the purchase of _tokenId. Sends the funds to the seller and transfers the token using transferFrom in Kittycontract. Emits the MarketTransaction event with txType \\\"Buy\\\". Requirement: The msg.value needs to equal the price of _tokenId Requirement: There must be an active offer for _tokenId\"},\"getAllTokenOnSale()\":{\"notice\":\"Get all tokenId's that are currently for sale. Returns an empty arror if none exist.\"},\"getOffer(uint256)\":{\"notice\":\"Get the details about a offer for _tokenId. Throws an error if there is no active offer for _tokenId.\"},\"removeOffer(uint256)\":{\"notice\":\"Removes an existing offer. Emits the MarketTransaction event with txType \\\"Remove offer\\\" Requirement: Only the seller of _tokenId can remove an offer.\"},\"setKittyContract(address)\":{\"notice\":\"Set the current KittyContract address and initialize the instance of Kittycontract. Requirement: Only the contract owner can call.\"},\"setOffer(uint256,uint256)\":{\"notice\":\"Creates a new offer for _tokenId for the price _price. Emits the MarketTransaction event with txType \\\"Create offer\\\" Requirement: Only the owner of _tokenId can create an offer. Requirement: There can only be one active offer for a token at a time. Requirement: Marketplace contract (this) needs to be an approved operator when the offer is created.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/IKittyMarketplace.sol\":\"IKittyMarketPlace\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/IERC721.sol\":{\"keccak256\":\"0xf364d1bc6664275f1a3e09c58828bfde39aef3714f612ab11257348b0c8dc5de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59b941dff08f8b54ab39a75e7f81ea66837ce4a1cb9e308dcb74b2cd48d2b804\",\"dweb:/ipfs/QmQh7t1ZdiLpQg6mtjCMRub4SApT1xBXAX1XCuu7CjyEK6\"]},\"project:/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x037e2d9d8b36fb281f36ed2d5013d3b07309ceebcb93a36bdecc9b61af3a0d01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e2f8e3107c3ca45a65b5f4f9f4dc1c2dadf43c451a74d93195c184ed8e11a7d\",\"dweb:/ipfs/QmRxrpY2FVuqjPQS5FovbrFaprNPV65gFzAQ76NSiuhtKx\"]},\"project:/contracts/IKittyMarketplace.sol\":{\"keccak256\":\"0x0535c064ac63c9b0af74f5e6ef62ded5c2d57d53fd4ef763c8ada9615135ae6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a26d2de67633899c01e7d8911bb5fd0382889c6fe231d911e3e09b2b7d8e3988\",\"dweb:/ipfs/QmcH6bTF5feVZCRtchvKjiN9jizjeTWcTwqkgmH1Maa9dL\"]},\"project:/contracts/Kittycontract.sol\":{\"keccak256\":\"0xb1afebea1e168de239ff474c3d7e4978d59b10df3f395128ec9b4e48180d9a5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9cfe8b828f39958b69447d8c593e680204faaf6b8f8f718246694600beeeaf\",\"dweb:/ipfs/Qmf7XKyQSBe2o8DGixLYBkaAwr3HQekQ2qyF49SMX7Nr3s\"]},\"project:/contracts/Ownable.sol\":{\"keccak256\":\"0xcefcf71887a66de8ca9b671c44acb12ce49d39e46efb924d7c99f0a86bb5c28c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce67a17c1a9b7f9b5e818185bfc501ca07b13ea18417ab83f7750d82ca592feb\",\"dweb:/ipfs/QmNWXQoteQZW9dLZB7CY7Tdp4GQ3Vb2dzYJu39UHRZZPMu\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Kittycontract.sol\";\r\nimport \"./Ownable.sol\";\r\n\r\n/*\r\n * Market place to trade kitties (should **in theory** be used for any ERC721 token)\r\n * It needs an existing Kitty contract to interact with\r\n * Note: it does not inherit from the kitty contracts\r\n * Note: The contract needs to be an operator for everyone who is selling through this contract.\r\n */\r\ninterface IKittyMarketPlace {\r\n    event MarketTransaction(string TxType, address owner, uint256 tokenId);\r\n\r\n    /**\r\n     * Set the current KittyContract address and initialize the instance of Kittycontract.\r\n     * Requirement: Only the contract owner can call.\r\n     */\r\n    function setKittyContract(address _kittyContractAddress) external;\r\n\r\n    /**\r\n     * Get the details about a offer for _tokenId. Throws an error if there is no active offer for _tokenId.\r\n     */\r\n    function getOffer(uint256 _tokenId)\r\n        external\r\n        view\r\n        returns (\r\n            address seller,\r\n            uint256 price,\r\n            uint256 index,\r\n            uint256 tokenId,\r\n            bool active\r\n        );\r\n\r\n    /**\r\n     * Get all tokenId's that are currently for sale. Returns an empty arror if none exist.\r\n     */\r\n    function getAllTokenOnSale()\r\n        external\r\n        view\r\n        returns (uint256[] memory listOfOffers);\r\n\r\n    /**\r\n     * Creates a new offer for _tokenId for the price _price.\r\n     * Emits the MarketTransaction event with txType \"Create offer\"\r\n     * Requirement: Only the owner of _tokenId can create an offer.\r\n     * Requirement: There can only be one active offer for a token at a time.\r\n     * Requirement: Marketplace contract (this) needs to be an approved operator when the offer is created.\r\n     */\r\n    function setOffer(uint256 _price, uint256 _tokenId) external;\r\n\r\n    /**\r\n     * Removes an existing offer.\r\n     * Emits the MarketTransaction event with txType \"Remove offer\"\r\n     * Requirement: Only the seller of _tokenId can remove an offer.\r\n     */\r\n    function removeOffer(uint256 _tokenId) external;\r\n\r\n    /**\r\n     * Executes the purchase of _tokenId.\r\n     * Sends the funds to the seller and transfers the token using transferFrom in Kittycontract.\r\n     * Emits the MarketTransaction event with txType \"Buy\".\r\n     * Requirement: The msg.value needs to equal the price of _tokenId\r\n     * Requirement: There must be an active offer for _tokenId\r\n     */\r\n    function buyKitty(uint256 _tokenId) external payable;\r\n}\r\n",
  "sourcePath": "/Users/mubashirhussain/Desktop/academy-kitties-template-master/contracts/IKittyMarketplace.sol",
  "ast": {
    "absolutePath": "project:/contracts/IKittyMarketplace.sol",
    "exportedSymbols": {
      "IERC721": [
        134
      ],
      "IERC721Receiver": [
        150
      ],
      "IKittyMarketPlace": [
        212
      ],
      "Kittycontract": [
        1238
      ],
      "Ownable": [
        1339
      ]
    },
    "id": 213,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 152,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "project:/contracts/Kittycontract.sol",
        "file": "./Kittycontract.sol",
        "id": 153,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 213,
        "sourceUnit": 1239,
        "src": "60:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 154,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 213,
        "sourceUnit": 1340,
        "src": "91:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 212,
        "linearizedBaseContracts": [
          212
        ],
        "name": "IKittyMarketPlace",
        "nameLocation": "433:17:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 162,
            "name": "MarketTransaction",
            "nameLocation": "464:17:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "TxType",
                  "nameLocation": "489:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "482:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "505:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "497:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "497:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "520:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "512:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "481:47:2"
            },
            "src": "458:71:2"
          },
          {
            "documentation": {
              "id": 163,
              "nodeType": "StructuredDocumentation",
              "src": "537:159:2",
              "text": " Set the current KittyContract address and initialize the instance of Kittycontract.\n Requirement: Only the contract owner can call."
            },
            "functionSelector": "62b7f94e",
            "id": 168,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setKittyContract",
            "nameLocation": "711:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "_kittyContractAddress",
                  "nameLocation": "736:21:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "728:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "727:31:2"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "767:0:2"
            },
            "scope": 212,
            "src": "702:66:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 169,
              "nodeType": "StructuredDocumentation",
              "src": "776:122:2",
              "text": " Get the details about a offer for _tokenId. Throws an error if there is no active offer for _tokenId."
            },
            "functionSelector": "4579268a",
            "id": 184,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOffer",
            "nameLocation": "913:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "930:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "922:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "922:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "921:18:2"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "1012:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1004:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1041:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1033:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1033:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1069:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1061:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1061:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1097:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1089:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1089:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "active",
                  "nameLocation": "1124:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1119:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1119:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "989:152:2"
            },
            "scope": 212,
            "src": "904:238:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 185,
              "nodeType": "StructuredDocumentation",
              "src": "1150:105:2",
              "text": " Get all tokenId's that are currently for sale. Returns an empty arror if none exist."
            },
            "functionSelector": "49b3709f",
            "id": 191,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllTokenOnSale",
            "nameLocation": "1270:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1287:2:2"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "listOfOffers",
                  "nameLocation": "1357:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "1340:29:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 187,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1340:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 188,
                    "nodeType": "ArrayTypeName",
                    "src": "1340:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1339:31:2"
            },
            "scope": 212,
            "src": "1261:110:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 192,
              "nodeType": "StructuredDocumentation",
              "src": "1379:401:2",
              "text": " Creates a new offer for _tokenId for the price _price.\n Emits the MarketTransaction event with txType \"Create offer\"\n Requirement: Only the owner of _tokenId can create an offer.\n Requirement: There can only be one active offer for a token at a time.\n Requirement: Marketplace contract (this) needs to be an approved operator when the offer is created."
            },
            "functionSelector": "941b055b",
            "id": 199,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setOffer",
            "nameLocation": "1795:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "1812:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "1804:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1804:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1828:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "1820:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1820:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1803:34:2"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1846:0:2"
            },
            "scope": 212,
            "src": "1786:61:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 200,
              "nodeType": "StructuredDocumentation",
              "src": "1855:186:2",
              "text": " Removes an existing offer.\n Emits the MarketTransaction event with txType \"Remove offer\"\n Requirement: Only the seller of _tokenId can remove an offer."
            },
            "functionSelector": "95a0f9c7",
            "id": 205,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeOffer",
            "nameLocation": "2056:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2076:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "2068:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2068:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2067:18:2"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2094:0:2"
            },
            "scope": 212,
            "src": "2047:48:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 206,
              "nodeType": "StructuredDocumentation",
              "src": "2103:351:2",
              "text": " Executes the purchase of _tokenId.\n Sends the funds to the seller and transfers the token using transferFrom in Kittycontract.\n Emits the MarketTransaction event with txType \"Buy\".\n Requirement: The msg.value needs to equal the price of _tokenId\n Requirement: There must be an active offer for _tokenId"
            },
            "functionSelector": "ae5310f6",
            "id": 211,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buyKitty",
            "nameLocation": "2469:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2486:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2478:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2478:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2477:18:2"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2512:0:2"
            },
            "scope": 212,
            "src": "2460:53:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 213,
        "src": "423:2093:2",
        "usedErrors": []
      }
    ],
    "src": "33:2485:2"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/IKittyMarketplace.sol",
    "exportedSymbols": {
      "IERC721": [
        134
      ],
      "IERC721Receiver": [
        150
      ],
      "IKittyMarketPlace": [
        212
      ],
      "Kittycontract": [
        1238
      ],
      "Ownable": [
        1339
      ]
    },
    "id": 213,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 152,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "project:/contracts/Kittycontract.sol",
        "file": "./Kittycontract.sol",
        "id": 153,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 213,
        "sourceUnit": 1239,
        "src": "60:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 154,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 213,
        "sourceUnit": 1340,
        "src": "91:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 212,
        "linearizedBaseContracts": [
          212
        ],
        "name": "IKittyMarketPlace",
        "nameLocation": "433:17:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 162,
            "name": "MarketTransaction",
            "nameLocation": "464:17:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "TxType",
                  "nameLocation": "489:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "482:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "505:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "497:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "497:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "520:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "512:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "481:47:2"
            },
            "src": "458:71:2"
          },
          {
            "documentation": {
              "id": 163,
              "nodeType": "StructuredDocumentation",
              "src": "537:159:2",
              "text": " Set the current KittyContract address and initialize the instance of Kittycontract.\n Requirement: Only the contract owner can call."
            },
            "functionSelector": "62b7f94e",
            "id": 168,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setKittyContract",
            "nameLocation": "711:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "_kittyContractAddress",
                  "nameLocation": "736:21:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "728:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "727:31:2"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "767:0:2"
            },
            "scope": 212,
            "src": "702:66:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 169,
              "nodeType": "StructuredDocumentation",
              "src": "776:122:2",
              "text": " Get the details about a offer for _tokenId. Throws an error if there is no active offer for _tokenId."
            },
            "functionSelector": "4579268a",
            "id": 184,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOffer",
            "nameLocation": "913:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "930:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "922:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "922:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "921:18:2"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "1012:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1004:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1041:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1033:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1033:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1069:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1061:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1061:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1097:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1089:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1089:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "active",
                  "nameLocation": "1124:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1119:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1119:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "989:152:2"
            },
            "scope": 212,
            "src": "904:238:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 185,
              "nodeType": "StructuredDocumentation",
              "src": "1150:105:2",
              "text": " Get all tokenId's that are currently for sale. Returns an empty arror if none exist."
            },
            "functionSelector": "49b3709f",
            "id": 191,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllTokenOnSale",
            "nameLocation": "1270:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1287:2:2"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "listOfOffers",
                  "nameLocation": "1357:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "1340:29:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 187,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1340:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 188,
                    "nodeType": "ArrayTypeName",
                    "src": "1340:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1339:31:2"
            },
            "scope": 212,
            "src": "1261:110:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 192,
              "nodeType": "StructuredDocumentation",
              "src": "1379:401:2",
              "text": " Creates a new offer for _tokenId for the price _price.\n Emits the MarketTransaction event with txType \"Create offer\"\n Requirement: Only the owner of _tokenId can create an offer.\n Requirement: There can only be one active offer for a token at a time.\n Requirement: Marketplace contract (this) needs to be an approved operator when the offer is created."
            },
            "functionSelector": "941b055b",
            "id": 199,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setOffer",
            "nameLocation": "1795:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "1812:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "1804:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1804:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1828:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "1820:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1820:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1803:34:2"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1846:0:2"
            },
            "scope": 212,
            "src": "1786:61:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 200,
              "nodeType": "StructuredDocumentation",
              "src": "1855:186:2",
              "text": " Removes an existing offer.\n Emits the MarketTransaction event with txType \"Remove offer\"\n Requirement: Only the seller of _tokenId can remove an offer."
            },
            "functionSelector": "95a0f9c7",
            "id": 205,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeOffer",
            "nameLocation": "2056:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2076:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "2068:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2068:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2067:18:2"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2094:0:2"
            },
            "scope": 212,
            "src": "2047:48:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 206,
              "nodeType": "StructuredDocumentation",
              "src": "2103:351:2",
              "text": " Executes the purchase of _tokenId.\n Sends the funds to the seller and transfers the token using transferFrom in Kittycontract.\n Emits the MarketTransaction event with txType \"Buy\".\n Requirement: The msg.value needs to equal the price of _tokenId\n Requirement: There must be an active offer for _tokenId"
            },
            "functionSelector": "ae5310f6",
            "id": 211,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buyKitty",
            "nameLocation": "2469:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2486:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2478:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2478:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2477:18:2"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2512:0:2"
            },
            "scope": 212,
            "src": "2460:53:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 213,
        "src": "423:2093:2",
        "usedErrors": []
      }
    ],
    "src": "33:2485:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-22T16:14:01.298Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "buyKitty(uint256)": {
        "notice": "Executes the purchase of _tokenId. Sends the funds to the seller and transfers the token using transferFrom in Kittycontract. Emits the MarketTransaction event with txType \"Buy\". Requirement: The msg.value needs to equal the price of _tokenId Requirement: There must be an active offer for _tokenId"
      },
      "getAllTokenOnSale()": {
        "notice": "Get all tokenId's that are currently for sale. Returns an empty arror if none exist."
      },
      "getOffer(uint256)": {
        "notice": "Get the details about a offer for _tokenId. Throws an error if there is no active offer for _tokenId."
      },
      "removeOffer(uint256)": {
        "notice": "Removes an existing offer. Emits the MarketTransaction event with txType \"Remove offer\" Requirement: Only the seller of _tokenId can remove an offer."
      },
      "setKittyContract(address)": {
        "notice": "Set the current KittyContract address and initialize the instance of Kittycontract. Requirement: Only the contract owner can call."
      },
      "setOffer(uint256,uint256)": {
        "notice": "Creates a new offer for _tokenId for the price _price. Emits the MarketTransaction event with txType \"Create offer\" Requirement: Only the owner of _tokenId can create an offer. Requirement: There can only be one active offer for a token at a time. Requirement: Marketplace contract (this) needs to be an approved operator when the offer is created."
      }
    },
    "version": 1
  }
}